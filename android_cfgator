#!/bin/bash

# Author: Timothy Q Pham (phamtq)
# Date: January 18, 2023
# Version: 1.01
#
# This BASH script runs the ADB command to show the serial numbers of the connected devices
# and it uses that to run commands which install the 2 Android apps we use for testing.


# Grab the serial number from the output
# Command line explanation:
#	./adb devices 		Uses the ADB app to generated a list devices:
#				List of devices attached
#				XXXXXXXXXXXX     devices
#
#	sed -n '2 p'		Uses the sed command to display the 2nd line
#
#	sed -r 's/\s+//g'	Again, use sed to remove whitespaces

SERIAL_LIST=$(./platform-tools/adb devices | awk '($2 == "device") { print $1 }')
SERIAL_COUNT=$(echo "${SERIAL_LIST}" | grep -c "^")

# Use that serial number as a parameter to install the .apk's to the phone
#

# Colorization
RED='\033[0;31m'
GREEN='\033[0;32m'
NOCOLOR='\033[0m'

# Check to see if the ADB command was able to sucessfully connect to the phone
if [[ -z "$SERIAL_LIST" ]]
then
	echo -e "${RED}An error occurred${NOCOLOR} (did you enable USB debugging on the phone?)"
	exit 1
else
	for (( i=1; i<=$SERIAL_COUNT; i++ ))
	do
		# Install Ampere to measure battery health
		echo "Device ${i} with serial number: $(sed -n ${i}p <<< "$SERIAL_LIST")"
		echo -e "${GREEN}Installing Ampere...${NOCOLOR}"
		./platform-tools/adb -s $(sed -n ${i}p <<< "$SERIAL_LIST") install ./platform-tools/com.gombosdev.ampere.apk

		#Use PhoneDoctorPlus to run the rest of the tests
		echo -e "${GREEN}Installing PhoneDoctorPlus...${NOCOLOR}"
		./platform-tools/adb -s $(sed -n ${i}p <<< "$SERIAL_LIST") install ./platform-tools/com.idea.PhoneDoctorPlus.apk
	done
fi
